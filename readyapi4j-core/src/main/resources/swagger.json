{"swagger":"2.0","info":{"version":"1.3.3","title":"Ready! API TestServer API","description":"A REST API based API testing framework; submit JSON test recipes using your favorite HTTP client or one of the existing open-source clients/tools on GitHub  to run API tests either asynchronously or synchronously:\n- Java Client: https://github.com/SmartBear/ready-api-testserver-client\n- Maven Plugin: https://github.com/olensmar/readyapi-testserver-maven-plugin  \n- Nodejs CLI: https://github.com/olensmar/ready-api-testserver-cli\n- Test-Recipe from Swagger generator: https://github.com/olensmar/testserver-swagger-codegen\n- Cucumber integration: https://github.com/olensmar/testserver-cucumber\n\nCheck out samples at https://github.com/smartbear/ready-api-testserver-samples and the documentation at http://readyapi.smartbear.com/testserver/start.\n\n### Try it out!\n\nA use-at-your-own-risk sandbox is provided at http://testserver.readyapi.io:8080 - feel free to try it out using Swagger-UI or any other tool of your liking (use demoUser/demoPassword as your basic authentication credentials). The sandbox is currently configured to support only REST requests and PropertyTransfers - if you want to try DataSources/DataSinks/Scripts in your API tests you will need to install and run your own instance of the TestServer - download it from https://smartbear.com/product/ready-api/testserver/overview/","contact":{"name":"SmartBear Software","url":"http://smartbear.com/testserver"}},"host":"testserver.readyapi.io:8080","basePath":"/v1","tags":[{"name":"readyapi"}],"schemes":["http"],"securityDefinitions":{"basicAuth":{"type":"basic","description":"Ready! API TestServer uses Basic authentication. Use the <code>-a &lt;user&gt;</code> command-line argument to add users. You can find detailed instructions in the <a href=\"http://readyapi.smartbear.com/testserver/install/configuring\">Ready! API TestServer documentation</a>."}},"paths":{"/readyapi/executions":{"get":{"tags":["readyapi"],"summary":"Returns test run results stored on the TestServer.","description":"Use this operation to get results of the latest test runs stored on the TestServer.<br/> The number of stored results is [configurable](http://readyapi.smartbear.com/testserver/reference/server_properties).","operationId":"getExecutions","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReports"}},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]},"post":{"tags":["readyapi"],"summary":"Runs a test recipe.","description":"Use this operation to send a test recipe to the TestServer. The recipe contents is passed in the request body (should be valid JSON contents).","operationId":"postRecipe","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"JSON-based test recipe contents.","required":false,"schema":{"$ref":"#/definitions/TestCase"}},{"name":"async","description":"Specifies when the TestServer replies:<br/>`true` - Immediately.<br/>`false` - After the execution is over.","in":"query","required":false,"type":"boolean","default":true},{"name":"callback","description":"The URL, to which the results will be posted.","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"400":{"description":"Bad request"},"429":{"description":"Too many requests"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/xml":{"post":{"tags":["readyapi"],"summary":"Executes a Ready! API project.","description":"Use this operation to send a Ready! API test project to the TestServer. You command the TestServer to execute the entire project, or an individual test suite or test case in it. The recipe request should have a Ready! API project file (.xml) attached to it.","operationId":"postProjectExecution","consumes":["application/xml","multipart/form-data"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Ready! API XML project.","required":false,"schema":{"$ref":"#/definitions/InputStream"}},{"name":"testCaseName","description":"The name of the test case to run.","in":"query","required":false,"type":"string"},{"name":"testSuiteName","description":"The name of the test suite to run.","in":"query","required":false,"type":"string"},{"name":"environment","description":"The target environment for tests execution.","in":"query","required":false,"type":"string"},{"name":"async","description":"Specifies when TestServer replies:<br/>`true` - Immediately.<br/>`false` - After the execution is over.","in":"query","required":false,"type":"boolean","default":true},{"name":"callback","description":"The URL, to which the results will be posted.","in":"query","required":false,"type":"string"},{"name":"clientCertFileName","description":"The name of the separately provided client certificate file.","in":"query","required":false,"type":"string"},{"name":"clientCertPassword","description":"The password for the separately provided client certificate file..","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"400":{"description":"Bad request"},"429":{"description":"Too many requests"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/composite":{"post":{"tags":["readyapi"],"summary":"Executes a zipped Ready! API composite project.","description":"Use this operation to send a zipped Ready! API composite project to the TestServer. You command the TestServer to execute the entire project, or an individual test suite or test case in it. The recipe request should have a Ready! API project file (.xml) attached to it.","operationId":"postCompositeProjectExecution","consumes":["application/zip","multipart/form-data"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Ready! API XML project.","required":false,"schema":{"$ref":"#/definitions/InputStream"}},{"name":"testCaseName","description":"The name of the test case to run.","in":"query","required":false,"type":"string"},{"name":"testSuiteName","description":"The name of the test suite to run.","in":"query","required":false,"type":"string"},{"name":"environment","description":"The target environment for tests execution.","in":"query","required":false,"type":"string"},{"name":"async","description":"Specifies when TestServer replies:<br/>`true` - Immediately.<br/>`false` - After the execution is over.","in":"query","required":false,"type":"boolean","default":true},{"name":"callback","description":"The URL, to which the results will be posted.","in":"query","required":false,"type":"string"},{"name":"clientCertFileName","description":"The name of the separately provided client certificate file.","in":"query","required":false,"type":"string"},{"name":"clientCertPassword","description":"The password for the separately provided client certificate file..","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"400":{"description":"Bad request"},"429":{"description":"Too many requests"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/project":{"post":{"tags":["readyapi"],"summary":"Executes a Ready! API project from an existing project repository on TestServer.","description":"Use this operation to execute a Ready! API project from an existing repository on TestServer. You command the TestServer to execute the entire project, or an individual test suite or test case in it. Repository name should be sent in request.  You can set-up a default repository on server if you don't want to send the repository name in each request. ","operationId":"postRequestToRunProjectFromRepository","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"JSON object with custome properties for Test Suites and test Cases.","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/CustomProperties"}}},{"name":"repositoryName","description":"The name of the repository from which project should be run.","in":"query","required":false,"type":"string"},{"name":"projectFileName","description":"The name of the project file or directory (for composite projects) to be run.","in":"query","required":true,"type":"string"},{"name":"testCaseName","description":"The name of the test case to run.","in":"query","required":false,"type":"string"},{"name":"testSuiteName","description":"The name of the test suite to run.","in":"query","required":false,"type":"string"},{"name":"environment","description":"The target environment for tests execution.","in":"query","required":false,"type":"string"},{"name":"async","description":"Specifies when TestServer replies:<br/>`true` - Immediately.<br/>`false` - After the execution is over.","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"400":{"description":"Bad request"},"429":{"description":"Too many requests"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/swagger":{"post":{"tags":["readyapi"],"summary":"Creates and executes tests for APIs defined in Swagger definition.","description":"Use this operation to submit a Swagger definition to TestServer along with an endpoint and to create  TestCase for each path defined in Swagger definition and execute them again the provided endpoint.\n You command the TestServer to create and execute tests for the APIs defined in Swagger definition.  ","operationId":"postRequestToExecuteSwagger","consumes":["application/json","application/yaml"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Swagger definition in JSON/YAML format.","required":false,"schema":{"$ref":"#/definitions/InputStream"}},{"name":"endpoint","description":"Endpoint against which tests should be eGrxecuted.  Tests will be executed against the host defined in Swagger definition if endpoint is not provided.","in":"query","required":false,"type":"string"},{"name":"swaggerEndpoint","description":"URL of Swagger definition if it is not provided as request body.","in":"query","required":false,"type":"string"},{"name":"callback","description":"The URL, to which the results will be posted.","in":"query","required":false,"type":"string"},{"name":"async","description":"Specifies when TestServer replies:<br/>`true` - Immediately.<br/>`false` - After the execution is over.","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"400":{"description":"Bad request"},"429":{"description":"Too many requests"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/{executionID}":{"delete":{"tags":["readyapi"],"summary":"Cancels the specified recipe execution","description":"Use this operation to stop the run specified by <i>executionID</i>. You can find in the response to your execution request ([see how](http://readyapi.smartbear.com/testserver/tutorials/your_first_recipe/results)), or you can send a GET <code>/readyapi/executions</code> request to the TestServer.","operationId":"cancelExecution","parameters":[{"name":"executionID","description":"The id of the test run to stop.","in":"path","required":true,"type":"string"}],"responses":{"204":{"description":"Execution canceled"},"404":{"description":"The specified test run was not found"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/{executionID}/status":{"get":{"tags":["readyapi"],"summary":"Returns the status of the specified recipe execution.","description":"Use this operation to get information on the recipe execution specified by <i>executionID</i>.  You can find in the response to your execution request ([see how](http://readyapi.smartbear.com/testserver/tutorials/your_first_recipe/results)), or you can send a GET <code>/readyapi/executions</code> request to the TestServer.","operationId":"getExecutionStatus","produces":["application/json"],"parameters":[{"name":"executionID","description":"The id of the desired test run.","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"404":{"description":"The specified test run was not found"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/{executionID}/logs":{"get":{"tags":["readyapi"],"summary":"Returns the transaction logs for the specified recipe execution.","description":"Use this operation to get transaction logs (individual request and recponse of executed test steps) of the recipe execution specified by <i>executionID</i>.  You can find it in the response of your execution request ([see how](http://readyapi.smartbear.com/testserver/tutorials/your_first_recipe/results)), or you can send a GET <code>/readyapi/executions/{executionID}/logs</code> request to the TestServer.","operationId":"getMessageExchanges","produces":["application/json"],"parameters":[{"name":"executionID","description":"The id of the desired test run.","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/HarLogRoot"}},"404":{"description":"The specified test run was not found"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/{executionId}/files":{"post":{"tags":["readyapi"],"summary":"Posts a file for the specified test run","description":"Use this operation to send additional files required by the executed test recipes. For example, you may need to send an Excel file for your test recipe that uses an Excel data source. The test recipe will be in the \"PENDING\" status until it receives the required file. Use the <code>multipart/form-data</code> media type for this request.","operationId":"addFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Required file as `form-data`.","required":true,"schema":{"$ref":"#/definitions/FormDataMultiPart"}},{"name":"executionId","description":"The id of the test run that waits for the files. [See how you can get it](http://readyapi.smartbear.com/testserver/tutorials/your_first_recipe/results).","in":"path","required":true,"type":"string"},{"name":"async","description":"Specifies when the TestServer replies:<br/>`true` - Immediately.<br/>`false` - After the execution is over.","in":"query","required":false,"type":"boolean","default":true}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ProjectResultReport"}},"400":{"description":"Bad request"},"412":{"description":"Precondition failed","schema":{"$ref":"#/definitions/ProjectResultReport"}},"422":{"description":"Not a pending execution"},"429":{"description":"Too many requests"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}},"/readyapi/executions/{executionID}/transactions/{transactionId}":{"get":{"tags":["readyapi"],"summary":"Gets message exchange for a test step execution transaction","description":"A particular execution of a test step is referred as transaction. Use this operation to get the request and response for a transaction in HAR format.","operationId":"getMessageExchange","produces":["application/json"],"parameters":[{"name":"executionID","description":"The id of the test run to get the logs for.","in":"path","required":true,"type":"string"},{"name":"transactionId","description":"The id of the transaction (test step execution) to get the message exchange (request and response) for.","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/HarLogRoot"}},"404":{"description":"The specified test run was not found"},"500":{"description":"Server error"}},"security":[{"basicAuth":[]}]}}},"definitions":{"NonNegativeInteger":{"type":"integer","format":"int64","minimum":1},"JsonPathContentAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/json/match/introduction\">JsonPath Match</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","description":"Properties of the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/json/match/introduction\">JsonPath Match</a> assertion.","properties":{"jsonPath":{"type":"string","description":"The path expression to use in matching."},"expectedContent":{"type":"string","description":"Expected result."},"allowWildcards":{"type":"boolean","description":"Specifies if asterisks  (<code>*</code>) in expectedContent are handled as wildcards.","default":false}}}]},"JsonPathExistenceAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/json/exist/introduction\">JsonPath Existence Match</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","description":"Properties of the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/json/match/introduction\">JsonPath Match</a> assertion.","properties":{"jsonPath":{"type":"string","description":"The path expression to use in matching."},"expectedContent":{"type":"string","description":"Expected result.","default":"true"}}}]},"MultiPart":{"type":"object","properties":{"contentDisposition":{"$ref":"#/definitions/ContentDisposition"},"entity":{"type":"object","description":"Entity items."},"headers":{"type":"object","description":"Headers array.","additionalProperties":{"type":"array","items":{"type":"string"}}},"mediaType":{"$ref":"#/definitions/MediaType"},"messageBodyWorkers":{"$ref":"#/definitions/MessageBodyWorkers"},"parent":{"$ref":"#/definitions/MultiPart"},"providers":{"$ref":"#/definitions/Providers"},"bodyParts":{"type":"array","items":{"$ref":"#/definitions/BodyPart"}},"parameterizedHeaders":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ParameterizedHeader"}}}}},"MediaType":{"type":"object","properties":{"type":{"type":"string"},"subtype":{"type":"string"},"parameters":{"type":"object","description":"Request parameters.","additionalProperties":{"type":"string"}},"wildcardType":{"type":"boolean","default":false},"wildcardSubtype":{"type":"boolean","default":false}}},"JdbcRequestTestStep":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/steps/request/jdbc/properties\">JDBC Request</a> test step.","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","description":"Properties of the <a href=\"http://readyapi.smartbear.com/structure/steps/request/jdbc/properties\">JDBC Request</a> test step.","properties":{"driver":{"type":"string","description":"The name of the driver used to connect to the database."},"connectionString":{"type":"string","description":"Full database URI including username and password as query parameters."},"password":{"type":"string","description":"Password used to connect to the database."},"sqlQuery":{"type":"string","description":"Query used to search the database."},"properties":{"type":"object","description":"Properties used to store received query results.","additionalProperties":{"type":"object"}},"assertions":{"type":"array","description":"Array of assertions used to verify test step results.","items":{"$ref":"#/definitions/Assertion"}},"storedProcedure":{"type":"boolean","description":"Specifies if the sqlQuery refers to the stored procedure.","default":false}}}]},"ProjectResultReport":{"type":"object","description":"Data structure for recipe execution results.","properties":{"projectName":{"type":"string","description":"The name of the executed project."},"status":{"type":"string","description":"Current execution status. If the assertion fail, the test is also FAILED.","enum":["INITIALIZED","PENDING","RUNNING","CANCELED","FINISHED","FAILED","WARNING"]},"testSuiteResultReports":{"type":"array","description":"The array of reports for test suites in the test recipe.","items":{"$ref":"#/definitions/TestSuiteResultReport"}},"timeTaken":{"type":"integer","description":"The number of milliseconds it took the TestServer to run the recipe.","format":"int64"},"startTime":{"type":"integer","description":"The timestamp of the execution start.","format":"int64"},"executionID":{"type":"string","description":"The identifier of the test run."},"unresolvedFiles":{"type":"array","description":"List of unresolved files needed to execute the recipe. It can be data sources, attachment or client certificates mentioned in recipe but not provided yet. These files should be send in another request to be able to execute the recipe.","items":{"$ref":"#/definitions/UnresolvedFile"}}}},"UnresolvedFile":{"type":"object","properties":{"fileName":{"type":"string","description":"Name fo the unresolved file"}}},"FormDataBodyPart":{"type":"object","properties":{"contentDisposition":{"$ref":"#/definitions/ContentDisposition"},"entity":{"type":"object"},"headers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"mediaType":{"$ref":"#/definitions/MediaType"},"messageBodyWorkers":{"$ref":"#/definitions/MessageBodyWorkers"},"parent":{"$ref":"#/definitions/MultiPart"},"providers":{"$ref":"#/definitions/Providers"},"name":{"type":"string"},"value":{"type":"string"},"formDataContentDisposition":{"$ref":"#/definitions/FormDataContentDisposition"},"simple":{"type":"boolean","default":false},"parameterizedHeaders":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ParameterizedHeader"}}}}},"InputStream":{"type":"object"},"PropertyTransferTestStep":{"allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","description":"The array of property transfers.","properties":{"transfers":{"type":"array","items":{"$ref":"#/definitions/PropertyTransfer"}}}}]},"Authentication":{"type":"object","description":"Data structure for authentication in test recipes.","properties":{"type":{"type":"string","description":"Authentication type. Possible values: <ul><li>Basic</li><li>SPNEGO/Kerberos</li><li>OAuth 2.0</li></ul>"},"username":{"type":"string","description":"Username used for authentication."},"password":{"type":"string","description":"Password used for authentication."},"domain":{"type":"string","description":"Domain the user belongs to. Required for Kerberos authentication."},"accessToken":{"type":"string","description":"For OAuth 2.0 only. Access token attached to the user."},"accessTokenPosition":{"type":"string","description":"For OAuth 2.0 only. The position of the access token."},"accessTokenUri":{"type":"string","description":"For OAuth 2.0 only. The URI used to retrieve the access token."},"clientId":{"type":"string","description":"For OAuth 2.0 only. The client ID attached to the user."},"clientSecret":{"type":"string","description":"For OAuth 2.0 only. The client secret key attached to the user."},"refreshToken":{"type":"string","description":"For OAuth 2.0 only. Specifies the refresh token used."}}},"XQueryContainsAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/xpath/xquery/match\">XQuery Match</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","description":"Properties of the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/xpath/xquery/match\">XQuery Match</a> assertion.","properties":{"xquery":{"type":"string","description":"XQuery expression used to validate the message."},"expectedContent":{"type":"string","description":"Expected content returned by the XQuery expression."},"allowWildcards":{"type":"boolean","description":"Specifies if asterisks  (<code>*</code>) in expectedContent are handled as wildcards.","default":false}}}]},"TestStepResultReport":{"type":"object","description":"Data structure for test step results in the report.","properties":{"testStepName":{"type":"string","description":"The name of the test step"},"assertionStatus":{"type":"string","description":"Specifies if the assertions failed or succeeded.","enum":["UNKNOWN","OK","FAILED","CANCELED"]},"timeTaken":{"type":"integer","description":"The number of milliseconds it took the TestServer to run the test step.","format":"int64"},"transactionId":{"type":"string","description":"The transaction id to identify a particular execution of a test step."},"messages":{"type":"array","description":"Error messages returned by the assertions.","items":{"type":"string"}}}},"DataSource":{"type":"object","description":"Data structure for specifying a <a href=\"http://readyapi.smartbear.com/structure/steps/data/source/start\">DataSource</a>.","properties":{"properties":{"type":"array","description":"The array of properties used to store retrieved data.","items":{"type":"string"}},"grid":{"type":"object","description":"Data structure for <a href=\"http://readyapi.smartbear.com/structure/sources/grid/start\">Grid Data Source</a>.","additionalProperties":{"type":"array","description":"The array of comma-separated data source items.","items":{"type":"string"}}},"excel":{"$ref":"#/definitions/ExcelDataSource"},"file":{"$ref":"#/definitions/FileDataSource"},"dataGen":{"$ref":"#/definitions/DataGenDataSource"}}},"PropertyTransferTarget":{"type":"object","description":"Data structure for specifying the target of the property transfer.","properties":{"targetName":{"type":"string","description":"The full name of the target test step."},"property":{"type":"string","description":"Property name to transfer the values to."},"pathLanguage":{"type":"string","description":"The language used to specify the path expression. Possible values: <ul><li>XPath</li><li>XQuery</li><li>JSONPath</li></ul>"},"path":{"type":"string","description":"The expression in the specified language that specifies the exact element to which the data is be written."}}},"PropertyTransferSource":{"type":"object","description":"Data structure for specifying the source of the property transfer.","properties":{"sourceName":{"type":"string","description":"The full name of the source test step."},"property":{"type":"string","description":"Property name to get the values from."},"pathLanguage":{"type":"string","description":"The language used to specify the path expression. Possible values: <ul><li>XPath</li><li>XQuery</li><li>JSONPath</li></ul>"},"path":{"type":"string","description":"The expression in the specified language that specifies the exact element from which the data source gets the data."}}},"TestStep":{"type":"object","description":"Data structure for specifying test step properties.","discriminator":"type","properties":{"type":{"type":"string","description":"Test step type. Possible values: <ul><li>DataSource</li><li>Groovy</li><li>JDBC Request</li><li>Property Transfer</li><li>REST Request</li><li>TestStepStruct</li></ul>"},"name":{"type":"string","description":"Test step name. This name is used to refer to the test step in the test recipe."}}},"FileDataSource":{"type":"object","description":"Data structure for specifying <a href=\"http://readyapi.smartbear.com/structure/sources/file/introduction\">File Data Source</a> test step.","properties":{"file":{"type":"string","description":"The name of the file used for the data source."},"charset":{"type":"string","description":"Character set used in the data file."},"separator":{"type":"string","description":"Character used in the file to separate the values."},"trim":{"type":"boolean","description":"Removes excess blank spaces.","default":false},"quotedValues":{"type":"boolean","description":"Set this to true if values are in quotes.","default":false}}},"FormDataMultiPart":{"type":"object","properties":{"contentDisposition":{"$ref":"#/definitions/ContentDisposition"},"entity":{"type":"object"},"headers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"mediaType":{"$ref":"#/definitions/MediaType"},"messageBodyWorkers":{"$ref":"#/definitions/MessageBodyWorkers"},"parent":{"$ref":"#/definitions/MultiPart"},"providers":{"$ref":"#/definitions/Providers"},"bodyParts":{"type":"array","items":{"$ref":"#/definitions/BodyPart"}},"fields":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/FormDataBodyPart"}}},"parameterizedHeaders":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ParameterizedHeader"}}}}},"InvalidHttpStatusCodesAssertion":{"description":"Data structure for <a href=\"http://readyapi.smartbear.com/structure/assertions/compliance/http/invalid/start\">Invalid HTTP Status Codes</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"invalidStatusCodes":{"type":"array","description":"A comma-separated list of HTTP codes receiving which causes the assertion to fail.","items":{"type":"string"}}},"description":"Properties of the <a href=\"http://readyapi.smartbear.com/structure/assertions/compliance/http/invalid/start\">Invalid HTTP Status Codes</a> assertion."}]},"TestCaseResultReport":{"type":"object","description":"Data structure for the test results report of the test case execution.","properties":{"testCaseName":{"type":"string","description":"The name of the test case the report is for."},"properties":{"type":"object","additionalProperties":{"type":"string"}},"testStepResultReports":{"type":"array","description":"The array of test step result reports.","items":{"$ref":"#/definitions/TestStepResultReport"}}}},"RestParameter":{"type":"object","properties":{"type":{"type":"string","enum":["PATH","QUERY","HEADER","MATRIX"],"default":"QUERY"},"name":{"type":"string"},"value":{"type":"string"}},"description":"REST Parameter definition."},"SoapParameter":{"type":"object","properties":{"name":{"type":"string"},"path":{"type":"string"},"value":{"type":"string"}},"description":"SOAP Parameter definition."},"FormDataContentDisposition":{"type":"object","properties":{"type":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}},"fileName":{"type":"string"},"creationDate":{"type":"string","format":"date-time"},"modificationDate":{"type":"string","format":"date-time"},"readDate":{"type":"string","format":"date-time"},"size":{"type":"integer","format":"int64"},"name":{"type":"string"}}},"XPathContainsAssertion":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/assertions/property/xpath/xpath/match\">XPath Match</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"xpath":{"type":"string","description":"XPath expression used to select content from the test step results."},"expectedContent":{"type":"string","description":"Expected match results."},"allowWildcards":{"type":"boolean","description":"Treat <code>*</code> as wildcard in a match.","default":false},"ignoreNamespaces":{"type":"boolean","description":"Match in all namespaces.","default":false},"ignoreComments":{"type":"boolean","description":"Skip XML comments when matching.","default":false}},"description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/assertions/property/xpath/xpath/match\">XPath Match</a> assertion."}]},"ResponseSLAAssertion":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/assertions/sla/response\">Response SLA</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"maxResponseTime":{"type":"string","description":"Maximum accepted response time."}},"description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/assertions/sla/response\">Response SLA</a> assertion."}]},"DataSourceTestStep":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/steps/data/source/start\">Data Source</a> test step.","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"dataSource":{"$ref":"#/definitions/DataSource"},"testSteps":{"type":"array","description":"Array of test steps using the data source and forming a data source loop.","items":{"$ref":"#/definitions/TestStep"}},"restartOnRun":{"type":"boolean","description":"If <code>true</code>, the iterator is set to the first row each time the test reaches the DataSource test step.","readOnly":true,"default":false},"preload":{"type":"boolean","description":"If <code>true</code>, the TestServer tries to preload the data before running the test.","default":false},"failOnEmpty":{"type":"boolean","description":"If <code>true</code>, the test step fails if the data source is empty.","default":false},"skipLoopOnEmpty":{"type":"boolean","description":"If <code>true</code>, skips the data source loop if the data source is empty.","default":false},"trimValues":{"type":"boolean","description":"If <code>true</code>, all leading and trailing spaces are removed.","default":false},"entitizeValues":{"type":"boolean","description":"If <code>true</code>, all HTML symbols are replaced with appropriate entities.","default":false},"expandProperties":{"type":"boolean","description":"If <code>true</code>, TestServer expands property expansion expressions in retrieved values.","default":false},"shared":{"type":"boolean","description":"If <code>true</code>, the data source iterator is used by all concurrent virtual users.","default":false},"restartShared":{"type":"boolean","description":"If <code>true</code> and <code>shared</code> is also <code>true</code>, resets the iterator when it reaches the end of data source.","default":false},"startRow":{"type":"string","description":"Zero-based index of the initial row that the data source uses."},"endRow":{"type":"string","description":"Zero-based index of the last row that the data source uses"}},"description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/steps/data/source/start\">Data Source</a> test step."}]},"ParameterizedHeader":{"type":"object","properties":{"value":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}}}},"JdbcStatusAssertion":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/assertions/jdbc/status\">JDBC Status</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/assertions/jdbc/status\">JDBC Status</a> test step.","properties":{}}]},"PropertyTransfer":{"type":"object","description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/steps/property/transfer/intro/step\">Property Transfer</a> test step.","properties":{"transferName":{"type":"string","description":"The name of the property transfer test step."},"source":{"$ref":"#/definitions/PropertyTransferSource"},"target":{"$ref":"#/definitions/PropertyTransferTarget"},"failTransferOnError":{"type":"boolean","description":"If <code>true</code>, the property transfer test step fails when an error occurs.","default":false},"setNullOnMissingSource":{"type":"boolean","description":"If <code>true</code>, sets target to <code>null</code> if the source is missing.","default":false},"transferTextContent":{"type":"boolean","description":"If <code>true</code>, only transfers text content.","default":false},"ignoreEmptyValue":{"type":"boolean","description":"If <code>true</code>, does not transfer empty or missing values.","default":false},"transferToAll":{"type":"boolean","description":"If <code>true</code>, transfers to all matching transfer selections.","default":false},"transferChildNodes":{"type":"boolean","description":"If <code>true</code>, transfers child nodes of the source node as children of the target node.","default":false},"entitizeTransferredValues":{"type":"boolean","description":"If <code>true</code>, all HTML symbols are replaced with appropriate entities.","default":false}}},"MessageBodyWorkers":{"type":"object"},"ExcelDataSource":{"type":"object","description":"Data structure for <a herf=\"http://readyapi.smartbear.com/structure/sources/excel/introduction\">Excel Data Source</a>.","properties":{"file":{"type":"string","description":"The name of the file used for the data source."},"worksheet":{"type":"string","description":"The name of the excel worksheet the test step gets data from."},"startAtCell":{"type":"string","description":"The cell from which the iterator starts gathering data."},"ignoreEmpty":{"type":"boolean","description":"If <code>true</code>, skips rows without data.","default":false}}},"GroovyScriptTestStep":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/steps/script/groovy/step\">Groovy Script</a> test step.","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"script":{"type":"string","description":"A string holding the groovy script to execute."}},"description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/steps/script/groovy/step\">Groovy Script</a> test step."}]},"DelayTestStep":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/steps/exec/delay/step\">Delay</a> test step.","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"delay":{"type":"integer","format":"int32","description":"An integer holding the value of delay in milliseconds."}},"description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/steps/exec/delay/step\">Delay</a> test step."}]},"JsonPathCountAssertion":{"description":"Data structure for the <a herf=\"http://readyapi.smartbear.com/structure/assertions/property/json/count/introduction\">JSONPath Count</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","description":"Properties of the <a herf=\"http://readyapi.smartbear.com/structure/assertions/property/json/count/introduction\">JSONPath Count</a> assertion.","properties":{"jsonPath":{"type":"string","description":"JSONPath expression used to select content from the test step results."},"expectedCount":{"type":"string","description":"Expected number of matched results."},"allowWildcards":{"type":"boolean","description":"Treat <code>*</code> as wildcard in a match.","default":false}}}]},"ProjectResultReports":{"type":"object","description":"Data structure for a project level report.","properties":{"projectResultReports":{"type":"array","description":"The array of executed test recipes.","items":{"$ref":"#/definitions/ProjectResultReport"}}}},"Assertion":{"type":"object","description":"Data Structure for specifying the assertion type.","discriminator":"type","properties":{"type":{"type":"string","description":"Assertion type. Possible values: <ul><li>AssertionStruct</li>  <li>Contains</li> <li>Invalid HTTP Status Codes</li> <li>JDBC Status</li> <li>JDBC Timeout</li> <li>JsonPath Count</li> <li>JsonPath Match</li> <li>Not Contains</li> <li>Response SLA</li> <li>Script Assertion</li> <li>Valid HTTP Status Codes</li> <li>XPath Match</li> <li>XQuery Match</li> </ul>"},"name":{"type":"string"}}},"Providers":{"type":"object"},"GroovyScriptAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/script/groovy\"  target=\"_blank\">Groovy Script</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"script":{"type":"string","description":"The desired Groovy script code. You can use the log, context and messageExchange variables."}},"description":"Properties of the \"Groovy Script\" assertion."}]},"SimpleNotContainsAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/content/not_contains\" target=\"_blank\">Not Contains</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"token":{"type":"string","description":"The sought-for text or regular expression."},"ignoreCase":{"type":"boolean","default":false,"description":"Specifies if the search is case-sensitive (false) or not (true). Ignored, if you search with regular expressions."},"useRegexp":{"type":"boolean","default":false,"description":"Specifies if the token property is a regular expression (true) or plain text (false)."}},"description":"Properties of the \"Not Contains\" assertion."}]},"ContentDisposition":{"type":"object","properties":{"type":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}},"fileName":{"type":"string"},"creationDate":{"type":"string","format":"date-time"},"modificationDate":{"type":"string","format":"date-time"},"readDate":{"type":"string","format":"date-time"},"size":{"type":"integer","format":"int64"}}},"BodyPart":{"type":"object","properties":{"contentDisposition":{"$ref":"#/definitions/ContentDisposition"},"entity":{"type":"object"},"headers":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"mediaType":{"$ref":"#/definitions/MediaType"},"messageBodyWorkers":{"$ref":"#/definitions/MessageBodyWorkers"},"parent":{"$ref":"#/definitions/MultiPart"},"providers":{"$ref":"#/definitions/Providers"},"parameterizedHeaders":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/ParameterizedHeader"}}}}},"JdbcTimeoutAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/jdbc/timeout\" target=\"_blank\">JDBC Timeout</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"timeout":{"type":"string","description":"The sought-for text or regular expression."}}}]},"TestCase":{"description":"Properties of the test recipe. Analogues of the <a href=\"http://readyapi.smartbear.com/structure/cases/options/basic\">test case options</a>.<br/>See also <a href=\"http://readyapi.smartbear.com/testserver/howto/text/modifying\">Modifying Test Options</a>.","type":"object","properties":{"properties":{"type":"object","additionalProperties":{"type":"string"}},"searchProperties":{"type":"boolean","default":false,"description":"???"},"maintainSession":{"type":"boolean","default":false,"description":"???"},"abortOnError":{"type":"boolean","default":false,"description":"Specifies if TestServer stops the recipe execution if an error occurs."},"failTestCaseOnError":{"type":"boolean","default":false,"description":"Specifies if TestServer logs the test run as failed if an error occurs."},"discardOkResults":{"type":"boolean","default":false,"description":"Specifies if TestServer logs messages on successful test step execution (false) or not (true). Set this property to true to save memory."},"socketTimeout":{"type":"string","description":"???"},"testCaseTimeout":{"type":"integer","format":"int32","description":"Sets the maximum execution time for the test in milliseconds. Default: 0 = timeout is not set."},"clientCertFileName":{"type":"string","description":"Client certificate file name"},"clientCertPassword":{"type":"string","description":"Client certificate password"},"testSteps":{"description":"An array of test steps to be executed.","type":"array","items":{"$ref":"#/definitions/TestStep"}}},"example":{"testSteps":[{"type":"REST Request","method":"GET","URI":"https://api.swaggerhub.com/apis","assertions":[{"type":"Valid HTTP Status Codes","validStatusCodes":[200]}]}]}},"SimpleContainsAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/property/content/contains\" target=\"_blank\">Contains</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"token":{"type":"string","description":"The sought-for text or regular expression."},"ignoreCase":{"type":"boolean","default":false,"description":"Specifies if the search is case-sensitive (false) or not (true). Ignored, if you search with a regular expressions."},"useRegexp":{"type":"boolean","default":false,"description":"Specifies if the token property is a regular expression (true) or plain text (false)."}},"description":"Properties of the \"Contains\" assertion."}]},"SoapRequestTestStep":{"description":"A SOAP request","allOf":[{"$ref":"#/definitions/RequestTestStepBase"},{"type":"object","properties":{"wsdl":{"type":"string","description":"the location of the WSDL for the target SOAP Service"},"binding":{"type":"string","description":"the WSDL binding defining the target operation"},"operation":{"type":"string","description":"the WSDL operation for the target operation"},"parameters":{"type":"array","description":"An array of request parameters.","items":{"$ref":"#/definitions/SoapParameter"}}},"required":["type","wsdl","operation"]}]},"SoapMockResponseTestStep":{"description":"A SOAP mock response test step","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"wsdl":{"type":"string","description":"the location of the WSDL for the target SOAP Service"},"binding":{"type":"string","description":"the WSDL binding defining the target operation"},"operation":{"type":"string","description":"the WSDL operation for the target operation"},"path":{"type":"string","description":"path for accessing the mock response. Endpoint will be the host on which it is run."},"port":{"type":"integer","format":"int32","description":"port to which mock service bind."},"createResponse":{"type":"bolean","description":"Boolean parameter to indicate whether a default response should be created."}},"required":["type","wsdl","operation"]}]},"RequestTestStepBase":{"descritpion":"Base for HTTP test steps (REST and SOAP)","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"URI":{"type":"string","description":"The URL, to which TestServer send the request."},"requestBody":{"type":"string","description":"The request body contents."},"authentication":{"$ref":"#/definitions/Authentication"},"assertions":{"description":"An array of assertions that verify the response to the request.","type":"array","items":{"$ref":"#/definitions/Assertion"}},"headers":{"type":"object","additionalProperties":{"type":"object"},"description":"Custom headers to be added to the request."},"attachments":{"description":"an array of attached files","type":"array","items":{"$ref":"#/definitions/RequestAttachment"}},"encoding":{"type":"string","description":"The request data encoding, for example, utf-8."},"timeout":{"type":"string","description":"The maximum allowed execution time for the request in milliseconds."},"followRedirects":{"type":"boolean","default":false,"description":"Specifies how TestServer handles redirects. If this property is false and a redirect occurs, TestServer processes the response as it is. If the property is true, it waits for the response from the new location."},"entitizeParameters":{"type":"boolean","default":false,"description":"Specifies if TestServer escapes special characters like &gt; or &amp; in the request body. Set this property to false if data is already escaped."},"clientCertificateFileName":{"type":"string","description":"Path of the test step specific client certificate file"},"clientCertificatePassword":{"type":"string","description":"Password of the test step specific client certificate"}}}]},"RestTestRequestStep":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/requests/rest/step/start\" target=\"_blank\">REST Request</a> test step.","allOf":[{"$ref":"#/definitions/RequestTestStepBase"},{"type":"object","properties":{"method":{"type":"string","description":"The request type: GET, POST, DELETE, PUT and so on."},"parameters":{"type":"array","description":"An array of request parameters.","items":{"$ref":"#/definitions/RestParameter"}},"mediaType":{"type":"string","description":"The request data media type, for example, multipart/form-data."},"postQueryString":{"type":"boolean","default":false,"description":"Specifies if the TestServer includes the query string parameters to the request body or not."}},"required":["URI","method"]}]},"RequestAttachment":{"description":"content attached to either a REST or SOAP request","type":"object","properties":{"contentType":{"type":"string"},"name":{"type":"string"},"contentId":{"type":"string"},"content":{"type":"string","description":"base64 encoded attachment content","format":"byte"},"required":["contentType","content"]}},"PluginTestStep":{"description":"data structure for defining a test step which is part of a Ready! API/TestServer plugin","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"configuration":{"type":"object","additionalProperties":{"type":"object"}}}}]},"PropertiesTestStep":{"description":"data structure for defining a Properties test step in recipe.","allOf":[{"$ref":"#/definitions/TestStep"},{"type":"object","properties":{"properties":{"type":"object","additionalProperties":{"type":"string"}}}}]},"TestSuiteResultReport":{"type":"object","description":"Results of a test suite execution.","properties":{"testSuiteName":{"type":"string","description":"The test suite name."},"testCaseResultReports":{"type":"array","description":"An array of test case execution results.","items":{"$ref":"#/definitions/TestCaseResultReport"}}}},"ValidHttpStatusCodesAssertion":{"description":"Data structure for the <a href=\"http://readyapi.smartbear.com/structure/assertions/compliance/http/valid/start\" target=\"_blank\">Valid HTTP Status Codes</a> assertion.","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{"validStatusCodes":{"type":"array","description":"An array of HTTP status codes which the assertion considers valid.","items":{"type":"string","description":"An individual HTTP status code."}}},"description":"Properties of the \"Valid HTTP Status Codes\" assertion."}]},"SchemaComplianceAssertion":{"description":"Schema Compliance Assertion","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{}}],"additionalProperties":false},"SoapFaultAssertion":{"description":"SOAP Fault Assertion","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{}}],"additionalProperties":false},"NotSoapFaultAssertion":{"description":"Not SOAP Fault Assertion","allOf":[{"$ref":"#/definitions/Assertion"},{"type":"object","properties":{}}],"additionalProperties":false},"HarLogRoot":{"type":"object","properties":{"log":{"$ref":"#/definitions/HarLog"}}},"HarLog":{"type":"object","properties":{"version":{"type":"string"},"creator":{"$ref":"#/definitions/HarCreator"},"browser":{"$ref":"#/definitions/HarBrowser"},"pages":{"type":"array","items":{"$ref":"#/definitions/HarPage"}},"entries":{"type":"array","items":{"$ref":"#/definitions/HarEntry"}},"comment":{"type":"string"}}},"HarCreator":{"type":"object","properties":{"name":{"type":"string"},"version":{"type":"string"},"comment":{"type":"string"}}},"HarBrowser":{"type":"object","properties":{"name":{"type":"string"},"version":{"type":"string"},"comment":{"type":"string"}}},"HarPage":{"type":"object","properties":{"startedDateTime":{"type":"string"},"id":{"type":"string"},"title":{"type":"string"},"pageTimings":{"$ref":"#/definitions/HarPageTimings"},"comment":{"type":"string"}}},"HarPageTimings":{"type":"object","properties":{"onContentLoad":{"type":"integer","format":"int64"},"onLoad":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarEntry":{"type":"object","properties":{"pageref":{"type":"string"},"startedDateTime":{"type":"string"},"time":{"type":"integer","format":"int64"},"request":{"$ref":"#/definitions/HarRequest"},"response":{"$ref":"#/definitions/HarResponse"},"cache":{"$ref":"#/definitions/HarCache"},"timings":{"$ref":"#/definitions/HarTimings"},"serverIPAddress":{"type":"string"},"connection":{"type":"string"},"comment":{"type":"string"}}},"HarRequest":{"type":"object","properties":{"method":{"type":"string"},"url":{"type":"string"},"httpVersion":{"type":"string"},"cookies":{"type":"array","items":{"$ref":"#/definitions/HarCookie"}},"headers":{"type":"array","items":{"$ref":"#/definitions/HarHeader"}},"queryString":{"type":"array","items":{"$ref":"#/definitions/HarQueryString"}},"postData":{"$ref":"#/definitions/HarPostData"},"headersSize":{"type":"integer","format":"int64"},"bodySize":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarResponse":{"type":"object","properties":{"status":{"type":"integer","format":"int32"},"statusText":{"type":"string"},"httpVersion\"":{"type":"string"},"cookies":{"type":"array","items":{"$ref":"#/definitions/HarCookie"}},"headers":{"type":"array","items":{"$ref":"#/definitions/HarHeader"}},"content":{"$ref":"#/definitions/HarContent"},"redirectURL":{"type":"string"},"headersSize":{"type":"integer","format":"int64"},"bodySize":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarCache":{"type":"object","properties":{"beforeRequest":{"$ref":"#/definitions/HarCacheRequest"},"afterRequest":{"$ref":"#/definitions/HarCacheRequest"},"comment":{"type":"string"}}},"HarTimings":{"type":"object","properties":{"blocked":{"type":"integer","format":"int64"},"dns":{"type":"integer","format":"int64"},"connect":{"type":"integer","format":"int64"},"send":{"type":"integer","format":"int64"},"wait":{"type":"integer","format":"int64"},"receive":{"type":"integer","format":"int64"},"ssl":{"type":"integer","format":"int64"},"comment":{"type":"string"}}},"HarCookie":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"path":{"type":"string"},"domain":{"type":"string"},"expires":{"type":"string"},"httpOnly":{"type":"boolean","default":false},"secure":{"type":"boolean","default":false},"comment":{"type":"string"}}},"HarHeader":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"comment":{"type":"string"}}},"HarContent":{"type":"object","properties":{"size":{"type":"integer","format":"int64"},"compression":{"type":"integer","format":"int64"},"mimeType":{"type":"string"},"text":{"type":"string"},"comment":{"type":"string"}}},"HarQueryString":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"comment":{"type":"string"}}},"HarCacheRequest":{"type":"object","properties":{"expires":{"type":"string","format":"date-time"},"lastAccess":{"type":"string","format":"date-time"},"hitCount":{"type":"integer","format":"int64"},"comment":{"type":"string"},"etag":{"type":"string"}}},"HarPostData":{"type":"object","properties":{"mimeType":{"type":"string"},"params":{"type":"array","items":{"$ref":"#/definitions/HarParam"}},"text":{"type":"string"},"comment":{"type":"string"}}},"HarParam":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"},"fileName":{"type":"string"},"contentType":{"type":"string"},"comment":{"type":"string"}}},"DataGenDataSource":{"type":"object","description":"Data structure for specifying Data Generator data sources.","properties":{"numberOfRows":{"type":"string","description":"Number of rows to generate","default":"10"},"dataGenerators":{"type":"array","items":{"$ref":"#/definitions/DataGenerator"},"description":"Data generators for various properties."}}},"DataGenerator":{"type":"object","description":"Data structure for specifying Data Generator data source properties.","discriminator":"type","properties":{"type":{"type":"string","description":"Test data generator type. Possible values: <ul><li>Boolean</li><li>State</li><li>Integer</li><li>Real</li><li>Date and Time</li><li></li></ul>"},"propertyName":{"type":"string","description":"Property name for which data generator should generate the values."},"duplicationFactor":{"type":"integer","format":"int32","default":1,"minimum":1}}},"BooleanDataGenerator":{"description":"Data structure for the BooleanDataGenerator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"format":{"type":"string","enum":["True/False","Yes/No","1/0"],"default":"True/False","description":"A string holding the format of the generated values."}}}]},"ComputerAddressDataGenerator":{"description":"Data structure for the Computer Address data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"addressType":{"type":"string","enum":["IPv4","Mac48"],"default":"IPv4","description":"A string holding the format of the generated computer addeses."}}}]},"CustomStringDataGenerator":{"description":"Data structure for the Custom String data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"value":{"type":"string","description":"A string holding the value or expression for the generating the custom string values."}}}]},"StringDataGenerator":{"description":"Data structure for the String data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"minimumCharacters":{"type":"integer","format":"int32","default":5,"description":"An integer holding the value for minimum number of characters in the generated string."},"maximumCharacters":{"type":"integer","format":"int32","default":10,"description":"An integer holding the value for maximum number of characters in the generated string."},"useLetters":{"type":"boolean","default":true,"description":"An boolean holding the value whether generated string should contain letters or not."},"useDigits":{"type":"boolean","default":true,"description":"An boolean holding the value whether generated string should contain digits or not."},"useSpaces":{"type":"boolean","default":true,"description":"An boolean holding the value whether generated string should contain white spaces or not."},"usePunctuationMarks":{"type":"boolean","default":true,"description":"An boolean holding the value whether generated string should contain punctuation marks or not."}}}]},"StateNameDataGenerator":{"description":"Data structure for the State Name data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"nameFormat":{"type":"string","enum":["Full","Abbreviated"],"default":"Full","description":"A string holding the format of the generated state names."}}}]},"NameDataGenerator":{"description":"Data structure for the Name data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"gender":{"type":"string","enum":["Any","Male","Female"],"default":"Any","description":"A string holding the gender for the generated names."},"nameType":{"type":"string","enum":["Full","FirstName","LastName"],"default":"Full","description":"A string holding the format of the generated names."}}}]},"IntegerDataGenerator":{"description":"Data structure for the Integer data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"minimumValue":{"type":"integer","format":"int32","default":1,"description":"An integer holding the minimum value for Integer data generator."},"maximumValue":{"type":"integer","format":"int32","default":100,"description":"An integer holding the maximum value for Integer data generator."},"generationMode":{"type":"string","enum":["Random","Sequential"],"default":"Random","description":"A string holding the value of how to generate the integer numbers."},"incrementBy":{"type":"integer","format":"int32","default":1,"description":"Increment value for generating sequential values if generationMode is Sequential. Ignored if generationMode is Random."}}}]},"RealNumberDataGenerator":{"description":"Data structure for the Integer data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"minimumValue":{"type":"number","default":1,"description":"An double holding the minimum value for Real Number data generator."},"maximumValue":{"type":"number","default":100,"description":"An double holding the maximum value for Real Number data generator."},"decimalPlaces":{"type":"integer","format":"int32","default":2,"description":"An integer holding the value for number of decimal places in generated values."},"generationMode":{"type":"string","enum":["Random","Sequential"],"default":"Random","description":"A string holding the value of how to generate the Real number values."},"incrementBy":{"type":"number","default":1,"description":"Increment value for generating sequential values if generationMode is Sequential. Ignored if generationMode is Random."}}}]},"ValuesFromSetDataGenerator":{"description":"Data structure for the Values from Set data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"generationMode":{"type":"string","enum":["Random","Sequential"],"default":"Random","description":"A string holding the value of how to produce values from the set."},"values":{"description":"An array containing the string values from which data generator should distribute.","type":"array","items":{"type":"string"}}}}]},"UKPostCodeDataGenerator":{"description":"Data structure for the United Kingdom Postcode data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"codeFormat":{"type":"string","enum":["All","A9 9AA","A99 9AA","AA9 9AA","A9A 9AA","AA99 9AA","AA9A 9AA"],"default":"All","description":"A string holding the format of the produced postcodes."}}}]},"USZIPCodeDataGenerator":{"description":"Data structure for the United States Postcode data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"codeFormat":{"type":"string","enum":["All","XXXXX","XXXXX-XXXX"],"default":"All","description":"A string holding the format of the produced ZIP codes."}}}]},"PhoneNumberDataGenerator":{"description":"Data structure for the United States Postcode data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"numberFormat":{"type":"string","default":"XXX-XXX-XXXX","description":"A string holding the number format of the produced ZIP codes. Allowed values: XXX-XXX-XXXX, +1 XXX-XXX-XXXX, +1 (XXX)-XXX-XXXX, +X XXX-XXX-XXXX, +X (XXX)-XXX-XXXX"}}}]},"DateAndTimeDataGenerator":{"description":"Data structure for the Date and Time data generator data source.","allOf":[{"$ref":"#/definitions/DataGenerator"},{"type":"object","properties":{"dateTimeFormat":{"type":"string","enum":["HH:MM AM/PM","HH:MM (24-hour)","HH:MM:SS AM/PM","HH:MM:SS (24-hour)","M/D/YYYY HH:MM:SS AM/PM","M/D/YYYY HH:MM:SS (24-hour)","M/D/YYYY","D Month YYYY","DayOfWeek D Month YYYY","YYYY-MM-DDTHH:mm:ssZ (ISO-8601)"],"default":"HH:MM AM/PM","description":"String value containing the format of the generated date and time values"},"minimumValue":{"type":"string","format":"date-time","default":{},"description":"String containing the start date value in ISO-8601 format."},"maximumValue":{"type":"string","format":"date-time","default":{},"description":"String containing the end date value in ISO-8601 format. Default willl be current date."},"generationMode":{"type":"string","enum":["Random","Sequential"],"default":"Random"},"incrementValueDay":{"type":"integer","format":"int32","default":1,"description":"Integer value containing the incremental step for day used for generating sequential values. Ignored if generation mode is Random."},"incrementValueHour":{"type":"integer","format":"int32","default":1,"description":"Integer value containing the incremental step for hour used for generating sequential values. Ignored if generation mode is Random."},"incrementValueMinute":{"type":"integer","format":"int32","default":1,"description":"Integer value containing the incremental step for minute used for generating sequential values. Ignored if generation mode is Random."},"incrementValueSecond":{"type":"integer","format":"int32","default":1,"description":"Integer value containing the incremental step for seconds used for generating sequential values. Ignored if generation mode is Random."}}}]},"CustomProperties":{"description":"Entity representing a custome property of Test Suite or a Test Case. This should be send along with XML project execution request to set the custom values for these properties. Value will be updated if property exists otherwise a property will be created with the provided name and value, before execution.","type":"object","properties":{"targetName":{"type":"string","required":true,"description":"Name of the target Test Suite or Test Case"},"properties":{"type":"object","additionalProperties":{"type":"string"}}}}}}